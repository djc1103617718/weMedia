<?php

namespace app\components\searchWidget;

use app\components\searchWidget\models\SearchForm;
use yii\base\InvalidParamException;
use yii\base\Widget;

class SearchWidget extends Widget
{
    const VIEW = 'search';
    const COLOR_RED = 'red';
    const COLOR_BLUE = 'blue';
    const COLOR_OLIVE_GREEN = 'olive';
    const COLOR_GREEN = 'green';
    const COLOR_ORANGE = 'orange';
    const COLOR_GRAY = 'gray';
    private $_instance;

    /**
     * @return array
     */
    public function getColorList()
    {
        return [
            self::COLOR_BLUE => SearchForm::CLASS_COLOR_BLUE,
            self::COLOR_GRAY => SearchForm::CLASS_COLOR_DEFAULT,
            self::COLOR_GREEN => SearchForm::CLASS_COLOR_GREEN,
            self::COLOR_OLIVE_GREEN => SearchForm::CLASS_COLOR_OLIVE_GREEN,
            self::COLOR_ORANGE => SearchForm::CLASS_COLOR_ORANGE,
            self::COLOR_RED => SearchForm::CLASS_COLOR_RED,
        ];
    }

    public function __construct(array $config=[])
    {
        $this->getInstance();
        parent::__construct($config);
    }

    /**
     * @return SearchForm
     */
    private function getInstance()
    {
        if (!$this->_instance) {
            $this->_instance = new SearchForm();
        }
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @param $className
     * @return SearchForm
     */
    public function setSearchModelName($className)
    {
        $this->_instance->searchModelName = $className;
    }

    /**
     * @param $url
     */
    public function setRequestUrl($url)
    {
        $this->_instance->url = $url;
    }

    /**
     * @param $searchAttribute
     */
    public function setSearchAttribute($searchAttribute)
    {
        $this->_instance->searchAttribute = $searchAttribute;
    }

    /**
     * @param $attributes
     * ['label' => 'value', .....]
     * @return mixed
     */
    public function setDropdownlistAttributes($attributes)
    {
        $this->_instance->dropdownlistAttributes = $attributes;
    }

    /**
     * @param string $color
     */
    public function setSearchColor($color=self::COLOR_GRAY)
    {
        $array = $this->getColorList();
        if (in_array($color, array_flip($array))) {
            $this->_instance->searchColor = $array[$color];
            return;
        }
        throw new InvalidParamException();
    }

    /**
     * @param int $length
     */
    public function setSearchBoxLength($length=4)
    {
        $this->_instance->searchBoxLength = $length;
    }

    /**
     * @param $float
     */
    public function setFloat($float)
    {
        $this->_instance->float = $float;
    }

    /**
     * @param string $css
     */
    public function addCss($css)
    {
        $this->_instance->css = $css;
    }

    /**
     * @param $js
     */
    public function addJs($js)
    {
        $this->_instance->js = $js;
    }

    /**
     * @return string
     */
    public function run()
    {
        return $this->render(self::VIEW,[
            'model' => $this->_instance,
        ]);
    }

}